parameters:
  # job name
  - name: name
    type: string
    default: deploy

  # Container registry to work with
  - name: registry
    type: string

  # Service connection to talk to azure
  - name: serviceConnection
    type: string

  # Service connection to talk to kubernetes
  - name: kubernetesServiceConnection
    type: string

  # Kubernetes namespace to use
  - name: namespace
    type: string

  # Agent pool to use
  - name: pool
    type: object
    default:
      vmImage: ubuntu-latest

  - name: variables
    type: object
    default: {}

  - name: environment
    type: string

  - name: dependsOn
    type: object
    default: []

  - name: steps
    type: object
    default: []

jobs:
  - job: ${{ parameters.name }}
    dependsOn: ${{ parameters.dependsOn }}
    pool: ${{ parameters.pool }}
    displayName: Deploy
    variables:
      registry: ${{ parameters.registry }}
      version: $(Build.SourceVersion)
      ${{ insert }}: ${{ parameters.variables}}
    steps:
      - task: Kubernetes@1
        displayName: "login"
        inputs:
          connectionType: "Kubernetes Service Connection"
          kubernetesServiceEndpoint: ${{ parameters.kubernetesServiceConnection }}
          namespace: ${{ parameters.namespace }}
          command: "login"

      - script: |
          kubectl config set-context deploy --namespace=${{ parameters.namespace }}
          kubectl config use-context deploy
          kubectl config view

      # - script: kubectl config view
      # - script: kubectl config set-context --current --namespace=${{ parameters.namespace }}
      - ${{ parameters.steps }}

      - task: Kubernetes@1
        displayName: "get pods"
        inputs:
          connectionType: "Kubernetes Service Connection"
          kubernetesServiceEndpoint: ${{ parameters.kubernetesServiceConnection }}
          namespace: ${{ parameters.namespace }}
          command: "get"
          arguments: "pods"
