parameters:
  # job name
  - name: name
    type: string
    default: deploy

  # Container registry to work with
  - name: registry
    type: string

  # Service connection to talk to azure
  - name: serviceConnection
    type: string

  # Service connection to talk to kubernetes
  - name: kubernetesServiceConnection
    type: string

  # Kubernetes namespace to use
  - name: namespace
    type: string

  # Agent pool to use
  - name: pool
    type: object
    default:
      vmImage: ubuntu-latest

  - name: variables
    type: object
    default: {}

  - name: environment
    type: string

  - name: dependsOn
    type: object
    default: []

  - name: preSteps
    type: object
    default:
      - script: kubectl get all
        displayName: kubectl get all

  - name: steps
    type: object
    default:
      - script: make deploy
        displayName: make deploy

  - name: postSteps
    type: object
    default:
      - script: kubectl get all
        displayName: kubectl get all
      - script: kubectl describe all
        displayName: kubectl describe all
      - script: kubectl get ingress
        displayName: kubectl get ingress
      - script: kubectl describe ingress
        displayName: kubectl describe ingress
      # - script: timeout 10 kubectl get events -w
      #   displayName: kubectl get events -w

jobs:
  - job: ${{ parameters.name }}
    dependsOn: ${{ parameters.dependsOn }}
    pool: ${{ parameters.pool }}
    displayName: Deploy
    variables:
      registry: ${{ parameters.registry }}
      version: $(Build.SourceVersion)
      env: ${{ parameters.environment }}
    steps:
      - pwsh: |
          $json = '${{ convertToJson(parameters.variables) }}'
          $vars = $json | ConvertFrom-Json -AsHashtable

          foreach($var in $vars.GetEnumerator()) {
            echo "##vso[task.setvariable variable=$($var.Name)]$($var.Value)"
          }
        displayName: Set variables

      - task: Kubernetes@1
        displayName: "login"
        inputs:
          connectionType: "Kubernetes Service Connection"
          kubernetesServiceEndpoint: ${{ parameters.kubernetesServiceConnection }}
          namespace: ${{ parameters.namespace }}
          command: "login"

      - script: |
          kubectl config set-context deploy --namespace=${{ parameters.namespace }}
          kubectl config use-context deploy
        displayName: Setup kubectl

      - script: ""
        displayName: -- preSteps --
      - ${{ parameters.preSteps }}
      - script: ""
        displayName: -- steps --
      - ${{ parameters.steps }}
      - script: ""
        displayName: -- postSteps --
      - ${{ parameters.postSteps }}
