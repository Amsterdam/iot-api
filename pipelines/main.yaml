resources:
  repositories:
    - repository: templates
      type: git
      name: mobiliteit/templates
      ref: main

trigger:
  batch: true
  branches:
    include:
      - main
  tags:
    include:
      - "*.*.*"

extends:
  template: template.yaml
  parameters:
    dev:
      serviceConnection: ARM-CCC-SSR-ont-01
      build:
        steps:
          - script: ls
          # - script: make test
          # - script: make build
          # - script: make push
      deploy:
        pool: TAMM
        namespace: ns-ccc-ssr-ont-01-sensorenregister
        kubernetesServiceConnection: "SCN-K8S-O-SSR"
        # steps:
        #   - script: |
        #       make deploy
    test:
      serviceConnection: ARM-CCC-SSR-test-01
      deploy:
        pool: TAMM
        namespace: ns-ccc-ssr-test-01-sensorenregister
        kubernetesServiceConnection: "SCN-K8S-O-SSR"
# stages:
#   - stage: dev
#     jobs:
#       - job: build
#         pool: ContainerBuilder
#         variables:
#           REGISTRY: saks01weuacrpgpgo5qvmwo.azurecr.io
#           REPOSITORY: tamm/sensorenregister/api
#         steps:
#           - script: make test
#             condition: eq(variables['Build.Reason'], 'PullRequest')
#             displayName: "QA - tests"

#           - script: make build
#             displayName: "Build"

#           - script: |
#               az login --identity
#               az acr login -n $(REGISTRY)

#           - script: |
#               # Build numer
#               VERSION=$(Build.BuildId) make push

#               # Git hash
#               VERSION=$(Build.SourceVersion) make push

#               # Branch name / Tag name
#               VERSION=$(Build.SourceBranchName) make push

#       - job: deploy
#         pool: TAMM
#         variables:
#           REGISTRY: saks01weuacrpgpgo5qvmwo.azurecr.io
#           REPOSITORY: tamm/sensorenregister/api
#         steps:
#           - task: AzureCLI@2
#             displayName: "Generate manifests"
#             inputs:
#               azureSubscription: "ARM-CCC-SSR-ont-01"
#               scriptType: "bash"
#               scriptLocation: "inlineScript"
#               inlineScript: |
#                 set -e
#                 pushd manifests/overlays/dev
#                 kustomize edit set image localhost:5001/sensorenregister/api=${REGISTRY}/${REPOSITORY}-dev:$(Build.BuildId)
#                 kustomize edit set namespace ns-ccc-ssr-ont-01-sensorenregister

#                 kustomize edit add annotation "build-id:$(Build.BuildId)"
#                 kustomize edit add annotation "build-time:$(date -u '+%Y%m%d%H%M%S')"
#                 kustomize edit add annotation "build-version:$(Build.SourceVersion)"
#                 kustomize edit add annotation "build-branch:$(Build.SourceBranchName)"

#                 kustomize build > generated.yaml
#                 cat generated.yaml
#                 popd

#           - task: Kubernetes@1
#             displayName: "Dry run manifests"
#             inputs:
#               connectionType: "Kubernetes Service Connection"
#               kubernetesServiceEndpoint: "SCN-K8S-O-SSR"
#               namespace: "ns-ccc-ssr-ont-01-sensorenregister"
#               command: "apply"
#               arguments: "--dry-run=client -f manifests/overlays/dev/generated.yaml"

#           - task: Kubernetes@1
#             displayName: "Delete immutable jobs"
#             inputs:
#               connectionType: "Kubernetes Service Connection"
#               kubernetesServiceEndpoint: "SCN-K8S-O-SSR"
#               namespace: "ns-ccc-ssr-ont-01-sensorenregister"
#               command: "delete"
#               arguments: "job migrate"

#           - task: Kubernetes@1
#             displayName: "Apply manifests"
#             inputs:
#               connectionType: "Kubernetes Service Connection"
#               kubernetesServiceEndpoint: "SCN-K8S-O-SSR"
#               namespace: "ns-ccc-ssr-ont-01-sensorenregister"
#               command: "apply"
#               arguments: "-f manifests/overlays/dev/generated.yaml"
