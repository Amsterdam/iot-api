resources:
  repositories:
    - repository: templates
      type: git
      name: mobiliteit/templates
      ref: main

trigger:
  batch: true
  branches:
    include:
      - main
  tags:
    include:
      - "*.*.*"

jobs:
  - job: build
    pool:
      vmImage: ubuntu-latest
    variables:
      registry: mainweuacroyh7oqq4sbyjt.azurecr.io
    steps:
      #################################################
      # Set some variables to be used later
      #################################################
      - task: AzureCLI@2
        displayName: Set variables
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $agentIpAddress=$(dig TXT +short o-o.myaddr.l.google.com `@ns1.google.com | tr -d '"')
            echo "The (MS-hosted) agent has ipv4: $agentIpAddress\n"
            echo "##vso[task.setvariable variable=agentIpAddress;]$($agentIpAddress)"

      - task: AzureCLI@2
        displayName: Add agent IP to firewall
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az acr network-rule `
              add -n mainweuacroyh7oqq4sbyjt `
              --ip-address $(agentIpAddress)

      # - task: DockerInstaller@0
      #   inputs:
      #     dockerVersion: "20.10.21"

      - task: AzureCLI@2
        condition: eq(variables['Build.Reason'], 'PullRequest')
        displayName: "QA"
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            make test

      - task: AzureCLI@2
        displayName: "ACR Login"
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            az acr login -n mainweuacroyh7oqq4sbyjt

      - task: AzureCLI@2
        displayName: "dump env"
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            env | sort

      - task: AzureCLI@2
        displayName: "build"
        env:
          REGISTRY: mainweuacroyh7oqq4sbyjt.azurecr.io
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            # Build numer
            VERSION=$(Build.BuildId) make push

            # Git hash
            VERSION=$(Build.SourceVersion) make push

            # Branch name / Tag name
            VERSION=$(Build.SourceBranchName) make push

      - task: AzureCLI@2
        displayName: Remove agent ip from firewall
        condition: always()
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az acr network-rule `
              remove -n mainweuacroyh7oqq4sbyjt `
              --ip-address $(agentIpAddress)

  - job: deploy
    dependsOn: build
    pool: TAMM
    steps:
      - task: AzureCLI@2
        displayName: "test"
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            kustomize build manifests/overlays/dev > generated.yaml
            cat generated.yaml

      - task: Kubernetes@1
        inputs:
          connectionType: "Kubernetes Service Connection"
          kubernetesServiceEndpoint: "SCN-K8S-O-SSR"
          namespace: "ns-ccc-ssr-ont-01-sensorenregister"
          command: "apply"
          arguments: "-f generated.yaml"

      - task: Kubernetes@1
        inputs:
          connectionType: "Kubernetes Service Connection"
          kubernetesServiceEndpoint: "SCN-K8S-O-SSR"
          namespace: "ns-ccc-ssr-ont-01-sensorenregister"
          command: "get"
          arguments: "all"

      - task: Kubernetes@1
        displayName: "Login to Kubernetes Cluster"
        inputs:
          connectionType: "Kubernetes Service Connection"
          kubernetesServiceEndpoint: "SCN-K8S-O-SSR"
          namespace: "ns-ccc-ssr-ont-01-sensorenregister"
          command: login
          # useClusterAdmin: true

      - task: AzureCLI@2
        displayName: "Set a default namespace"
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            kubectl config set-context --current --namespace=ns-ccc-ssr-ont-01-sensorenregister
            kubectl config view

      - task: AzureCLI@2
        displayName: "Set a default namespace"
        inputs:
          azureSubscription: "ARM-CCC-SSR-ont-01"
          scriptType: "bash"
          scriptLocation: "inlineScript"
          inlineScript: |
            kubectl get all
