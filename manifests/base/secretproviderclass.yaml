# This is a SecretProviderClass example using user-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: cert-ingress-io
spec:
  provider: azure
  secretObjects: # secretObjects defines the desired state of synced K8s secret objects
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true" # Set to true for using managed identity
    userAssignedIdentityID: "<to be filled>" # Set the clientID of the user-assigned managed identity to use
    keyvaultName: sharedaks # Set to the name of your key vault
    cloudName: "" # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects: |
      array:
        - |
          objectName: tls
          objectType: cert              # object types: secret, key, or cert
          objectVersion: ""               # [OPTIONAL] object versions, default to latest if empty
    secretObjects:
      - secretName: foo
        data:
          - objectName: tls
            key: secret-name
    tenantId: "72fca1b1-2c2e-4376-a445-294d80196804" # The tenant ID of the key vault
