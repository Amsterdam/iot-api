{{- $fullName := include "helm.fullname" $ }}
{{- $labels := include "helm.labels" $ -}}
{{- range $key, $value := .Values.secrets | default list }}
{{- if eq (lower .type) "keyvault" }}
{{- $context := dict "local" . "root" $ -}}
{{- $annotations := include "resource.annotations" $context }}
{{- $labels := include "resource.labels" $context }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ printf "%s-%s" $key $fullName }}
  labels: {{ $labels | nindent 4 }}
  {{- with $annotations }}
  annotations: {{ . | nindent 4 }}
  {{- end }}
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: "{{ .keyVaultIdentity | default $.Values.keyVaultIdentity }}"
    keyvaultName: "{{ .keyVaultName | default $.Values.keyVaultName }}"
    tenantId: "{{ .tenantId | default $.Values.tenantId }}"
    objects: |
      array:
      {{- with .tls }}
        - |
          objectName: {{ . }}
          objectType: secret
      {{- end }}
      {{- range .secrets | default list }}
        - |
          objectName: {{ . }}
          objectType: secret
      {{- end }}
  secretObjects:

    {{- with .tls }}
    - secretName: {{ printf "%s-%s" $key $fullName | quote }}
      type: kubernetes.io/tls
      data:
        - objectName: {{ . }}
          key: tls.key
        - objectName: {{ . }}
          key: tls.crt
    {{- end }}

    {{- with .secrets }}
    - secretName: {{ printf "%s-%s" $key $fullName | quote }}
      type: Opaque
      data:
      {{- range . }}
        - objectName: {{ . | quote }}
          key: {{ . | quote }}
      {{- end }}
    {{- end }}
---
{{- end }}
{{- end }}
