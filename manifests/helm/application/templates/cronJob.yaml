{{- $fullName := include "helm.fullname" $ -}}
{{- $labels := include "helm.labels" $ -}}

{{- range $manifestName, $values := $.Values.cronJobs }}
{{- if ne .enabled false }}
{{- $image := merge ($values.image | default dict) $.Values.image }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ $manifestName }}-{{ $fullName }}"
spec:
  schedule: {{ $values.schedule | quote }}
  # default 300 seconds == 5 minutes
  startingDeadlineSeconds: {{ $values.startingDeadlineSeconds | default 300 }}
  successfulJobsHistoryLimit: {{ $values.successfulJobsHistoryLimit | default 3 }}
  failedJobsHistoryLimit:  {{ $values.failedJobsHistoryLimit | default 3 }}
  concurrencyPolicy: {{ $values.concurrencyPolicy | default "Forbid" }}
  jobTemplate:
    metadata:
      labels:
        {{ $labels | nindent 8 }}
    spec:
      backoffLimit: 5
      template:
        metadata:
          labels:
            {{ $labels | nindent 12 }}
            deployedAt: {{ now | unixEpoch | quote }}
        spec:
          restartPolicy: OnFailure

          securityContext:
            runAsNonRoot: true
            runAsUser: 1000

          containers:
          - name: main

            {{- with .resources}}
            resources:
              {{- toYaml . | nindent 10}}
            {{- end }}

            securityContext:
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true

            image: {{ list $image.registry $image.repository | join "/" }}:{{ $image.tag }}
            imagePullPolicy: {{ $.Values.image.imagePullPolicy | default "IfNotPresent"}}

            {{- $env := merge ($values.env | default dict) $.Values.env }}
            {{ if $env }}
            env:
              {{- range $name, $value := $env }}
              - name: {{ $name | upper | replace "-" "_" }}
                value: {{ $value | quote }}
              {{- end }}
            {{- end }}

            {{- if .secrets }}
            envFrom:
              {{- range .secrets }}
              - secretRef:
                  name: {{ . }}
              {{- end }}
            {{- end }}

            volumeMounts:
            {{- range .secrets }}
              - name: {{ . }}
                mountPath: /mnt/secrets/{{ . | replace "-" "_" }}
                readOnly: true
            {{- end }}

          volumes:
          {{- range .secrets }}
            - name: {{ . }}
              csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ . }}
          {{- end }}
---
{{ end }}
{{ end }}
